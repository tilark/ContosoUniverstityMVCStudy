@model ContosoUniverstity.ViewModel.StudentEnrollments

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<div class="form-horizontal">
    <h4>StudentEnrollments</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Student.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Student.ID, "Student", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
           
           <input type="text" readonly="readonly" value="@Html.Encode(Model.Student.FullName)" />


        </div>
    </div>
</div>
@if (Model.Enrollments != null)
{
    int i = 0;
    <h3>
        Enrollment Message by Selected Instructor
    </h3>
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.Student.ID)
        <table class="table">
            <tr>
                <th></th>
                <th>Title</th>
                <th>Grade</th>
            </tr>

            @foreach (var item in Model.Enrollments)
            {
                <tr class="table">
                    <td>
                        
                    </td>
                    <td>
                        @item.Course.Title
                    </td>
                    <td>
                        <input hidden="hidden" type="text" name="@Html.Encode(String.Format("enrollment[{0}].EnrollmentID)", i))" value="@Html.Encode(@item.EnrollmentID)" />
                        @*@Html.Hidden(String.Format("enrollment[{0}].grade", i), item.EnrollmentID)*@
                        @Html.TextBox(string.Format("enrollment[{0}].grade", i), item.Grade)
                        @Html.ValidationMessage(string.Format("enrollment[{0}].grade", i))


                        @*@item.Grade*@
                        @*@Html.EditorFor(model => item.Grade, new { htmlAttributes = new { @class = "form-control" } })*@


                    </td>
                </tr>
                i++;
            }
        </table>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    }
}

    @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Enrollment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EnrollmentID)

                <div class="form-group">
                    @Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Grade, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }*@

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
